;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name posh-todo.categories, :imports nil, :requires {p posh.core, comp posh-todo.components, posh-todo.tasks posh-todo.tasks, posh-todo.dashboard posh-todo.dashboard, util posh-todo.util, dash posh-todo.dashboard, posh-todo.util posh-todo.util, posh.core posh.core, tasks posh-todo.tasks, posh-todo.components posh-todo.components}, :uses nil, :defs {delete-category {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/categories.cljs", :line 10, :column 7, :end-line 10, :end-column 22, :arglists (quote ([conn category-id]))}, :name posh-todo.categories/delete-category, :variadic false, :file "src/posh_todo/categories.cljs", :end-column 22, :method-params ([conn category-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn category-id]))}, category-panel {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/categories.cljs", :line 16, :column 7, :end-line 16, :end-column 21, :arglists (quote ([conn todo-id]))}, :name posh-todo.categories/category-panel, :variadic false, :file "src/posh_todo/categories.cljs", :end-column 21, :method-params ([conn todo-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn todo-id]))}, add-category! {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/categories.cljs", :line 31, :column 7, :end-line 31, :end-column 20, :arglists (quote ([conn todo-id category-name]))}, :name posh-todo.categories/add-category!, :variadic false, :file "src/posh_todo/categories.cljs", :end-column 20, :method-params ([conn todo-id category-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn todo-id category-name]))}, add-new-category {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/categories.cljs", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([conn todo-id]))}, :name posh-todo.categories/add-new-category, :variadic false, :file "src/posh_todo/categories.cljs", :end-column 23, :method-params ([conn todo-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn todo-id]))}, category-item {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/categories.cljs", :line 38, :column 7, :end-line 38, :end-column 20, :arglists (quote ([conn todo-id category]))}, :name posh-todo.categories/category-item, :variadic false, :file "src/posh_todo/categories.cljs", :end-column 20, :method-params ([conn todo-id category]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn todo-id category]))}, category-menu {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/categories.cljs", :line 46, :column 7, :end-line 46, :end-column 20, :arglists (quote ([conn todo-id]))}, :name posh-todo.categories/category-menu, :variadic false, :file "src/posh_todo/categories.cljs", :end-column 20, :method-params ([conn todo-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn todo-id]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:category/_todo :find :where :key :task/_category :todo/display-category :button :category/name :db.fn/retractEntity :div $ :db/id :h2 :db/add . :category/todo ?t :onClick ?c :in :span}, :order [:category/name :db.fn/retractEntity :find ?c . :in $ ?t :where :todo/display-category :div :h2 :category/todo :button :onClick :db/add :db/id :task/_category :category/_todo :span :key]}, :doc nil}