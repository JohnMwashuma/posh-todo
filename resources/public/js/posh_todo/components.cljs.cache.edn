;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name posh-todo.components, :imports nil, :requires {p posh.core, posh.core posh.core, db posh-todo.db, posh-todo.db posh-todo.db, r reagent.core, reagent.core reagent.core, util posh-todo.util, posh-todo.util posh-todo.util}, :uses {conn posh-todo.db}, :defs {add-box {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/components.cljs", :line 11, :column 7, :end-line 11, :end-column 14, :arglists (quote ([conn add-fn]))}, :name posh-todo.components/add-box, :variadic false, :file "src/posh_todo/components.cljs", :end-column 14, :method-params ([conn add-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn add-fn]))}, edit-box {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/components.cljs", :line 27, :column 7, :end-line 27, :end-column 15, :arglists (quote ([conn edit-id id attr]))}, :name posh-todo.components/edit-box, :variadic false, :file "src/posh_todo/components.cljs", :end-column 15, :method-params ([conn edit-id id attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 4, :fn-var true, :arglists (quote ([conn edit-id id attr]))}, editable-label {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/components.cljs", :line 42, :column 7, :end-line 42, :end-column 21, :arglists (quote ([conn id attr]))}, :name posh-todo.components/editable-label, :variadic false, :file "src/posh_todo/components.cljs", :end-column 21, :method-params ([conn id attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn id attr]))}, checkbox {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/components.cljs", :line 59, :column 7, :end-line 59, :end-column 15, :arglists (quote ([conn id attr checked?]))}, :name posh-todo.components/checkbox, :variadic false, :file "src/posh_todo/components.cljs", :end-column 15, :method-params ([conn id attr checked?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 4, :fn-var true, :arglists (quote ([conn id attr checked?]))}, stage-button {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh-todo/src/posh_todo/components.cljs", :line 67, :column 7, :end-line 67, :end-column 19, :arglists (quote ([stages finish-fn]))}, :name posh-todo.components/stage-button, :variadic false, :file "src/posh_todo/components.cljs", :end-column 19, :method-params ([stages finish-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([stages finish-fn]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:onMouseOut :find ?attr :where :edit/val :button :button-text :edit/attr :value :edit/id :type :db.fn/retractEntity ?edit $ :checked :db/add :input . :onChange :onClick ?id :in :span}, :order [:span :input :type :value :onChange :button :onClick :button-text :edit/val :db/add :db.fn/retractEntity :find ?edit . :in $ ?id ?attr :where :edit/id :edit/attr :checked :onMouseOut]}, :doc nil}